import { useState, useEffect } from "react";
import Head from "next/head";
import { Inter } from "next/font/google";
import octokit from "../utils/octokit";
import { Dropdown } from "../components/dropdown";

export default function Home() {
  const [user, setUser] = useState(Array);
  const [search, setSearch] = useState(String);
  const [notif, setNotif] = useState(String);

  const getUser = async (e: any) => {
    e.preventDefault();
    setNotif(search);
    if (search.trim().length) {
      const result = await octokit.request("GET /search/users", {
        q: search,
      });
      setUser(result.data.items.slice(0, 5));
    }
  };

  const onChange = (e: any) => {
    setSearch(e.target.value);
  };

  return (
    <>
      <Head>
        <title>Github Explorer</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className="flex justify-center top-14 mb-5 pb-5 relative font-extrabold text-2xl">
          Github Repository Explorer
        </h1>
        <form
          className="flex items-center flex-col"
          onSubmit={(e) => getUser(e)}
        >
          <input
            type="text"
            className="w-1/3 max-sm:w-60 h-8 p-2  bg-gray-200 text-gray-700 font-normal rounded-sm mt-10"
            value={search}
            onChange={(e) => onChange(e)}
            placeholder="Enter Username"
          />
          <button
            className="bg-blue-700 w-1/3 max-sm:w-60 h-10 rounded-md font-medium hover:bg-blue-600 hover:text-white active:bg-blue-700 mt-5"
            type="submit"
          >
            Search
          </button>
        </form>
        {!notif ? (
          <></>
        ) : (
          <p className="flex items-center mt-2 font-normal flex-col">
            Showing users for {notif}
          </p>
        )}
        <section className="flex flex-col items-center mt-2">
          {!user.length ? (
            <></>
          ) : (
            user.map((item: any) => (
              <Dropdown key={item.id} login={item.login} />
            ))
          )}
        </section>
      </main>
    </>
  );
}
